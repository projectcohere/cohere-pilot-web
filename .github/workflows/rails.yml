name: CI
on:
  push:
    branches:
      - master
      - prod
jobs:
  build:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:11.5
        # will assign a random free host port
        ports:
          - 5432/tcp
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: ""
          POSTGRES_DB: postgres
        # pg container does not provide a health check
        options: >-
          --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    steps:
    - uses: actions/checkout@v1

    - name: Cache Gems
      uses: actions/cache@v1
      with:
        path: vendor/bundle
        key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
        restore-keys: |
          ${{ runner.os }}-gems-

    - name: Get Yarn Cache Dir
      id: yarn-cache-path
      run: |
        echo "::set-output name=dir::$(yarn cache dir)"

    - name: Cache Node Packages
      uses: actions/cache@v1
      id: yarn-cache
      with:
        path: ${{ steps.yarn-cache-path.outputs.dir }}
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-yarn-

    - name: Setup Ruby
      uses: actions/setup-ruby@v1
      with:
        ruby-version: 2.6.x

    - name: Setup Node
      uses: actions/setup-node@v1
      with:
        node-version: 12.x

    - name: Install Postgres Tools
      run: |
        sudo apt install -y libpq-dev

    - name: Install PDF Tools
      run: |
        curl -sS -L https://github.com/wkhtmltopdf/wkhtmltopdf/releases/download/0.12.5/wkhtmltox_0.12.5-1.bionic_amd64.deb > wkhtmltox.deb
        sudo apt install ./wkhtmltox.deb
        sudo apt install -y poppler-utils

    - name: Install Gems
      run: |
        gem install bundler
        bundle config path vendor/bundle
        bundle install --jobs 4 --retry 3

    - name: Install Node Packages
      run: |
        yarn install

    - name: Build
      env:
        PGHOST: localhost
        PGUSER: postgres
        PGPORT: ${{ job.services.postgres.ports[5432] }} # get the randomly-assigned port
        RAILS_ENV: test
      run: |
        cp .env.sample .env
        bin/rails db:setup
        bin/rails webpacker:compile

    - name: Test
      env:
        PGHOST: localhost
        PGUSER: postgres
        PGPORT: ${{ job.services.postgres.ports[5432] }} # get the randomly-assigned port
        RAILS_ENV: test
      run: |
        make t/all
